{"ast":null,"code":"var _jsxFileName = \"/home/vinicius/\\xC1rea de Trabalho/ReactDex/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { getPokemonData, getPokemons, searchPokemon } from \"./api\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Pokedex from \"./components/Pokedex\";\nimport Searchbar from \"./components/Searchbar\";\nimport { FavoriteProvider } from \"./contexts/favoritesContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst favoritesKey = \"f\";\n\nfunction App() {\n  _s();\n\n  const [page, setPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [notFound, setNotFound] = useState(false);\n  const [pokemons, setPokemons] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const itensPerPage = 25;\n\n  const fetchPokemons = async () => {\n    try {\n      setLoading(true);\n      setNotFound(false);\n      const data = await getPokemons(itensPerPage, itensPerPage * page);\n      const promises = data.results.map(async pokemon => {\n        return await getPokemonData(pokemon.url);\n      });\n      const results = await Promise.all(promises);\n      setPokemons(results);\n      setLoading(false);\n      setTotalPages(Math.ceil(data.count / itensPerPage));\n    } catch (error) {\n      console.log(\"fetchPokemons error: \", error);\n    }\n  };\n\n  const loadFavoritePokemons = () => {\n    const pokemons = JSON.parse(window.localStorage.getItem(favoritesKey)) || [];\n    setFavorites(pokemons);\n  };\n\n  useEffect(() => {\n    loadFavoritePokemons();\n  }, []);\n  useEffect(() => {\n    fetchPokemons();\n  }, [page]);\n\n  const updateFavoritePokemons = name => {\n    const updatedFavorites = [...favorites];\n    const favoriteIndex = favorites.indexOf(name);\n\n    if (favoriteIndex >= 0) {\n      updatedFavorites.splice(favoriteIndex, 1);\n    } else {\n      updatedFavorites.push(name);\n    }\n\n    window.localStorage.setItem(favoritesKey, JSON.stringify(updatedFavorites));\n    setFavorites(updatedFavorites);\n  };\n\n  const onSearchHandler = async pokemon => {\n    if (!pokemon) {\n      return fetchPokemons();\n    }\n\n    setLoading(true);\n    setNotFound(false);\n    const result = await searchPokemon(pokemon);\n\n    if (!result) {\n      setNotFound(true);\n    } else {\n      setPokemons([result]);\n      setPage(0);\n      setTotalPages(1);\n    }\n\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FavoriteProvider, {\n    value: {\n      favoritePokemons: favorites,\n      updateFavoritePokemons: updateFavoritePokemons\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Searchbar, {\n        onSearch: onSearchHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), notFound ? /*#__PURE__*/_jsxDEV(\"div\", {\n        \"class-name\": \"not-found-text\",\n        children: \" Meteu essa?! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Pokedex, {\n        pokemons: pokemons,\n        loading: loading,\n        page: page,\n        setPage: setPage,\n        totalPages: totalPages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5TrkhbdszvWMootg9hjiqzsnetU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/vinicius/Área de Trabalho/ReactDex/src/App.js"],"names":["React","useEffect","useState","getPokemonData","getPokemons","searchPokemon","Navbar","Pokedex","Searchbar","FavoriteProvider","favoritesKey","App","page","setPage","totalPages","setTotalPages","loading","setLoading","notFound","setNotFound","pokemons","setPokemons","favorites","setFavorites","itensPerPage","fetchPokemons","data","promises","results","map","pokemon","url","Promise","all","Math","ceil","count","error","console","log","loadFavoritePokemons","JSON","parse","window","localStorage","getItem","updateFavoritePokemons","name","updatedFavorites","favoriteIndex","indexOf","splice","push","setItem","stringify","onSearchHandler","result","favoritePokemons"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getPokemonData, getPokemons, searchPokemon } from \"./api\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Pokedex from \"./components/Pokedex\";\nimport Searchbar from \"./components/Searchbar\";\nimport { FavoriteProvider } from \"./contexts/favoritesContext\";\n\nconst favoritesKey = \"f\"\nfunction App() {\n  const [page, setPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [notFound, setNotFound] = useState(false);\n  const [pokemons, setPokemons] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n\n  const itensPerPage = 25;\n  const fetchPokemons = async () => {\n    try {\n      setLoading(true);\n      setNotFound(false);\n      const data = await getPokemons(itensPerPage, itensPerPage * page);\n      const promises = data.results.map(async (pokemon) => {\n        return await getPokemonData(pokemon.url);\n      });\n\n      const results = await Promise.all(promises);\n      setPokemons(results);\n      setLoading(false);\n      setTotalPages(Math.ceil(data.count / itensPerPage));\n    } catch (error) {\n      console.log(\"fetchPokemons error: \", error);\n    }\n  };\n\n  const loadFavoritePokemons = () => {\n    const pokemons = JSON.parse(window.localStorage.getItem(favoritesKey)) || []\n    setFavorites(pokemons)\n  }\n\n  useEffect(() => {\n    loadFavoritePokemons()\n  }, []);\n  \n  useEffect(() => {\n    fetchPokemons();\n  }, [page]);\n\n  const updateFavoritePokemons = (name) => {\n    const updatedFavorites = [...favorites]\n    const favoriteIndex = favorites.indexOf(name)\n    if(favoriteIndex >= 0) {\n      updatedFavorites.splice(favoriteIndex, 1);\n    }else {\n      updatedFavorites.push(name);\n    }\n    window.localStorage.setItem(favoritesKey, JSON.stringify(updatedFavorites))\n    setFavorites(updatedFavorites);\n  }\n\n  const onSearchHandler = async (pokemon) => {\n    if(!pokemon) {\n      return fetchPokemons();\n    }\n\n    setLoading(true)\n    setNotFound(false)\n    const result = await searchPokemon(pokemon)\n    if(!result) {\n      setNotFound(true)\n    } else {\n      setPokemons([result])\n      setPage(0)\n      setTotalPages(1)\n    }\n    setLoading(false)\n\n  }\n  return (\n    <FavoriteProvider\n      value={{\n        favoritePokemons: favorites,\n        updateFavoritePokemons: updateFavoritePokemons,\n      }}\n    >\n      <div>\n        <Navbar />\n        <Searchbar onSearch={onSearchHandler}/>\n        {notFound ? (\n          <div class-name=\"not-found-text\"> Meteu essa?! </div>\n        ) : \n        (<Pokedex\n          pokemons={pokemons}\n          loading={loading}\n          page={page}\n          setPage={setPage}\n          totalPages={totalPages}\n        />)}\n      </div>\n    </FavoriteProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}